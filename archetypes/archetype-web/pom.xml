<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <artifactId>archetype-web</artifactId>

  <build>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <configuration>
            <annotationProcessorPaths>
              <path>
                <artifactId>lombok</artifactId>
                <groupId>org.projectlombok</groupId>
                <version>${lombok.version}</version>
              </path>
              <!-- This is needed when using Lombok 1.18.16 and above -->
              <path>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <groupId>org.projectlombok</groupId>
                <version>${lombok-mapstruct-binding.version}</version>
              </path>
              <!-- Mapstruct should follow the lombok path(s) -->
              <path>
                <artifactId>mapstruct-processor</artifactId>
                <groupId>org.mapstruct</groupId>
                <version>${org.mapstruct.version}</version>
              </path>
            </annotationProcessorPaths>
            <compilerArgs>
              <compilerArg>
                -Amapstruct.suppressGeneratorTimestamp=true
              </compilerArg>
              <compilerArg>
                -Amapstruct.suppressGeneratorVersionInfoComment=true
              </compilerArg>
            </compilerArgs>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.8.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.0.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <groupId>org.apache.maven.plugins</groupId>
          <version>3.2.0</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-archetype-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.2.0</version>
      </plugin>

      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>codestyle/checkstyle.xml</configLocation>
          <excludes>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <configuration>
              <consoleOutput>true</consoleOutput>
              <failOnViolation>true</failOnViolation>
              <failsOnError>true</failsOnError>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
            <id>checkstyle</id>
            <phase>validate</phase>
          </execution>
        </executions>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.0.0</version>
      </plugin>

      <plugin>
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
        <groupId>org.apache.maven.plugins</groupId>
        <!--deploy 时忽略 model-->
        <version>3.0.0-M1</version>
      </plugin>

      <!-- Mandatory plugins for using Spock -->
      <plugin>
        <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
        visit https://github.com/groovy/GMavenPlus/wiki -->
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>compileTests</goal>
            </goals>
          </execution>
        </executions>
        <groupId>org.codehaus.gmavenplus</groupId>
        <version>3.0.0</version>
      </plugin>
    </plugins>
  </build>
  <dependencyManagement>
    <dependencies>
      <!--Project modules-->
      <dependency>
        <artifactId>archetype-web-client</artifactId>
        <groupId>com.zjl.archetype</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>archetype-web-client-impl</artifactId>
        <groupId>com.zjl.archetype</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>archetype-web-biz</artifactId>
        <groupId>com.zjl.archetype</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>archetype-web-biz-impl</artifactId>
        <groupId>com.zjl.archetype</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>archetype-web-domain</artifactId>
        <groupId>com.zjl.archetype</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>archetype-web-domain-impl</artifactId>
        <groupId>com.zjl.archetype</groupId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <artifactId>archetype-web-infra</artifactId>
        <groupId>com.zjl.archetype</groupId>
        <version>${project.version}</version>
      </dependency>


      <!--COLA components-->
      <dependency>
        <artifactId>component-common</artifactId>
        <groupId>com.zjl.component</groupId>
        <version>${cola.components.version}</version>
      </dependency>
      <dependency>
        <artifactId>component-web-base</artifactId>
        <groupId>com.zjl.component</groupId>
        <version>${cola.components.version}</version>
      </dependency>
      <dependency>
        <artifactId>component-web-starter</artifactId>
        <groupId>com.zjl.component</groupId>
        <version>${cola.components.version}</version>
      </dependency>
      <!--COLA components End-->

      <!--Project modules End-->


      <!-- spring cloud -->
      <dependency>
        <artifactId>spring-cloud-starter-openfeign</artifactId>
        <groupId>org.springframework.cloud</groupId>
        <version>2.1.1.RELEASE</version>
      </dependency>
      <!-- spring cloud end -->

      <!--Spring Boot-->
      <dependency>
        <artifactId>spring-boot-dependencies</artifactId>
        <groupId>org.springframework.boot</groupId>
        <scope>import</scope>
        <type>pom</type>
        <version>${spring-boot.version}</version>
      </dependency>
      <dependency>
        <artifactId>mybatis-plus-boot-starter</artifactId>
        <groupId>com.baomidou</groupId>
        <version>${mybatis.plus.spring.boot.version}</version>
      </dependency>
      <!--Spring Boot End-->
      <!--Validation API-->
      <dependency>
        <artifactId>validation-api</artifactId>
        <groupId>javax.validation</groupId>
        <version>2.0.0.Final</version>
      </dependency>
      <dependency>
        <artifactId>hibernate-validator</artifactId>
        <groupId>org.hibernate.validator</groupId>
        <version>6.0.22.Final</version>
      </dependency>
      <dependency>
        <artifactId>javax.el-api</artifactId>
        <groupId>javax.el</groupId>
        <version>3.0.0</version>
      </dependency>
      <dependency>
        <artifactId>javax.el</artifactId>
        <groupId>org.glassfish.web</groupId>
        <version>2.2.6</version>
      </dependency>
      <!--Validation API End -->
      <!-- Misc -->
      <dependency>
        <artifactId>reflections</artifactId>
        <groupId>org.reflections</groupId>
        <version>0.9.10</version>
      </dependency>
      <dependency>
        <artifactId>lombok</artifactId>
        <groupId>org.projectlombok</groupId>
        <version>1.18.22</version>
      </dependency>
      <dependency>
        <artifactId>commons-lang3</artifactId>
        <groupId>org.apache.commons</groupId>
        <version>3.4</version>
      </dependency>
      <dependency>
        <artifactId>fastjson</artifactId>
        <groupId>com.alibaba</groupId>
        <version>1.2.79</version>
      </dependency>
      <!-- Misc End -->
      <dependency>
        <artifactId>mapstruct</artifactId>
        <groupId>org.mapstruct</groupId>
        <version>${org.mapstruct.version}</version>
      </dependency>

      <!-- 单元测试 -->
      <dependency>
        <artifactId>groovy-sql</artifactId>
        <groupId>org.apache.groovy</groupId>
        <version>${groovy.version}</version>
      </dependency>
      <!-- Optional dependencies for using Spock -->
      <dependency> <!-- use a specific Groovy version rather than the one specified by spock-core -->
        <artifactId>groovy</artifactId>
        <groupId>org.apache.groovy</groupId>
        <version>${groovy.version}</version>
      </dependency>

      <!-- Mandatory dependencies for using Spock -->
      <dependency>
        <artifactId>spock-core</artifactId>
        <groupId>org.spockframework</groupId>
        <scope>test</scope>
        <version>${spock.version}</version>
      </dependency>
      <dependency>
        <artifactId>spock-junit4</artifactId>
        <groupId>org.spockframework</groupId>
        <scope>test</scope>
        <version>${spock.version}</version>
      </dependency>


      <!-- enables mocking of classes (in addition to interfaces) -->
      <dependency>
        <artifactId>byte-buddy</artifactId>
        <groupId>net.bytebuddy</groupId>
        <scope>test</scope>
      </dependency>
      <!--             enables mocking of classes without default constructor (together with ByteBuddy or CGLIB)  -->
      <dependency>
        <artifactId>objenesis</artifactId>
        <groupId>org.objenesis</groupId>
        <scope>test</scope>
        <version>3.3</version>
      </dependency>
      <!--only required if Hamcrest matchers are used -->
      <dependency>
        <artifactId>hamcrest-core</artifactId>
        <groupId>org.hamcrest</groupId>
        <scope>test</scope>
      </dependency>


      <!-- 需要指定1.9.0 避免idea执行异常 -->
      <dependency>
        <artifactId>junit-platform-engine</artifactId>
        <groupId>org.junit.platform</groupId>
        <version>1.9.0</version>
      </dependency>
      <dependency>
        <artifactId>junit-platform-commons</artifactId>
        <groupId>org.junit.platform</groupId>
        <version>1.9.0</version>
      </dependency>


      <!-- 单元测试 -->

    </dependencies>
  </dependencyManagement>
  <groupId>com.zjl.archetype</groupId>
  <modelVersion>4.0.0</modelVersion>
  <modules>
    <module>bootstrap</module>
    <module>archetype-web-client</module>
    <module>archetype-web-client-impl</module>
    <module>archetype-web-biz</module>
    <module>archetype-web-biz-impl</module>
    <module>archetype-web-domain</module>
    <module>archetype-web-domain-impl</module>
    <module>archetype-web-infra</module>
  </modules>

  <name>archetype-web</name>

  <packaging>pom</packaging>

  <properties>
    <cola.components.version>1.0.0-SNAPSHOT</cola.components.version>
    <groovy.version>4.0.15</groovy.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <lombok.version>1.18.16</lombok.version>

    <maven.compiler.source>1.8</maven.compiler.source>

    <maven.compiler.target>1.8</maven.compiler.target>
    <mybatis-starter.version>1.3.1</mybatis-starter.version>
    <mybatis.plus.spring.boot.version>3.3.0</mybatis.plus.spring.boot.version>
    <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
    <powermock.version>2.0.2</powermock.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <spock.version>2.3-groovy-4.0</spock.version>
    <spring-boot.version>2.2.6.RELEASE</spring-boot.version>

  </properties>

  <version>1.0.0-SNAPSHOT</version>

</project>
