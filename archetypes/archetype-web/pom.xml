<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.zjl.archetype</groupId>
    <artifactId>archetype-web</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>archetype-web</name>

    <properties>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <cola.components.version>1.0.0-SNAPSHOT</cola.components.version>

        <spring-boot.version>2.2.6.RELEASE</spring-boot.version>
        <mybatis-starter.version>1.3.1</mybatis-starter.version>
        <org.mapstruct.version>1.4.2.Final</org.mapstruct.version>
        <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
        <lombok.version>1.18.16</lombok.version>
        <mybatis.plus.spring.boot.version>3.3.0</mybatis.plus.spring.boot.version>
        <powermock.version>2.0.2</powermock.version>
        <groovy.version>4.0.15</groovy.version>
        <spock.version>2.3-groovy-4.0</spock.version>

    </properties>

    <modules>
        <module>bootstrap</module>
        <module>archetype-web-client</module>
        <module>archetype-web-client-impl</module>
        <module>archetype-web-biz</module>
        <module>archetype-web-biz-impl</module>
        <module>archetype-web-domain</module>
        <module>archetype-web-domain-impl</module>
        <module>archetype-web-infra</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!--Project modules-->
            <dependency>
                <groupId>com.zjl.archetype</groupId>
                <artifactId>archetype-web-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zjl.archetype</groupId>
                <artifactId>archetype-web-client-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zjl.archetype</groupId>
                <artifactId>archetype-web-biz</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zjl.archetype</groupId>
                <artifactId>archetype-web-biz-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zjl.archetype</groupId>
                <artifactId>archetype-web-domain</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zjl.archetype</groupId>
                <artifactId>archetype-web-domain-impl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zjl.archetype</groupId>
                <artifactId>archetype-web-infra</artifactId>
                <version>${project.version}</version>
            </dependency>


            <!--COLA components-->
            <dependency>
                <groupId>com.zjl.component</groupId>
                <artifactId>component-common</artifactId>
                <version>${cola.components.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zjl.component</groupId>
                <artifactId>component-web-starter</artifactId>
                <version>${cola.components.version}</version>
            </dependency>
            <!--COLA components End-->

            <!--Project modules End-->


            <!-- spring cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>2.1.1.RELEASE</version>
            </dependency>
            <!-- spring cloud end -->

            <!--Spring Boot-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.spring.boot.version}</version>
            </dependency>
            <!--Spring Boot End-->
            <!--Validation API-->
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>2.0.0.Final</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>6.0.22.Final</version>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>3.0.0</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.web</groupId>
                <artifactId>javax.el</artifactId>
                <version>2.2.6</version>
            </dependency>
            <!--Validation API End -->
            <!-- Misc -->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.9.10</version>
            </dependency>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>1.18.22</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.4</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>1.2.79</version>
            </dependency>
            <!-- Misc End -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${org.mapstruct.version}</version>
            </dependency>

            <!-- 单元测试 -->
            <dependency>
                <groupId>org.apache.groovy</groupId>
                <artifactId>groovy-sql</artifactId>
                <version>${groovy.version}</version>
            </dependency>
            <!-- Optional dependencies for using Spock -->
            <dependency> <!-- use a specific Groovy version rather than the one specified by spock-core -->
                <groupId>org.apache.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>${groovy.version}</version>
            </dependency>

            <!-- Mandatory dependencies for using Spock -->
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-core</artifactId>
                <version>${spock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.spockframework</groupId>
                <artifactId>spock-junit4</artifactId>
                <version>${spock.version}</version>
                <scope>test</scope>
            </dependency>


            <!-- enables mocking of classes (in addition to interfaces) -->
            <dependency>
                <groupId>net.bytebuddy</groupId>
                <artifactId>byte-buddy</artifactId>
                <scope>test</scope>
            </dependency>
            <!--             enables mocking of classes without default constructor (together with ByteBuddy or CGLIB)  -->
            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>3.3</version>
                <scope>test</scope>
            </dependency>
            <!--only required if Hamcrest matchers are used -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <scope>test</scope>
            </dependency>


            <!-- 需要指定1.9.0 避免idea执行异常 -->
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-engine</artifactId>
                <version>1.9.0</version>
            </dependency>
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-commons</artifactId>
                <version>1.9.0</version>
            </dependency>


        <!-- 单元测试 -->

    </dependencies>
</dependencyManagement>

<build>

<plugins>
    <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-archetype-plugin</artifactId>
        <version>3.2.0</version>
    </plugin>
    <!--            <plugin>-->
    <!--                <groupId>org.apache.maven.plugins</groupId>-->
    <!--                <artifactId>maven-checkstyle-plugin</artifactId>-->
    <!--                <version>3.0.0</version>-->
    <!--                <executions>-->
    <!--                    <execution>-->
    <!--                        <id>checkstyle</id>-->
    <!--                        <phase>validate</phase>-->
    <!--                        <goals>-->
    <!--                            <goal>check</goal>-->
    <!--                        </goals>-->
    <!--                        <configuration>-->
    <!--                            <failOnViolation>true</failOnViolation>-->
    <!--                            <consoleOutput>true</consoleOutput>-->
    <!--                            <failsOnError>true</failsOnError>-->
    <!--                        </configuration>-->
    <!--                    </execution>-->
    <!--                </executions>-->
    <!--                <configuration>-->
    <!--                    <configLocation>codestyle/checkstyle.xml</configLocation>-->
    <!--                    <excludes>-->
    <!--                    </excludes>-->
    <!--                </configuration>-->
    <!--            </plugin>-->

    <plugin>
        <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-deploy-plugin -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.0.0-M1</version>
        <!--deploy 时忽略 model-->
        <configuration>
            <skip>true</skip>
        </configuration>
    </plugin>

    <!-- Mandatory plugins for using Spock -->
    <plugin>
        <!-- The gmavenplus plugin is used to compile Groovy code. To learn more about this plugin,
        visit https://github.com/groovy/GMavenPlus/wiki -->
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>3.0.0</version>
        <executions>
            <execution>
                <goals>
                    <goal>compile</goal>
                    <goal>compileTests</goal>
                </goals>
            </execution>
        </executions>
    </plugin>
</plugins>

<pluginManagement>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.1</version>
            <configuration>
                <source>1.8</source>
                <target>1.8</target>
                <annotationProcessorPaths>
                    <path>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok</artifactId>
                        <version>${lombok.version}</version>
                    </path>
                    <!-- This is needed when using Lombok 1.18.16 and above -->
                    <path>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok-mapstruct-binding</artifactId>
                        <version>${lombok-mapstruct-binding.version}</version>
                    </path>
                    <!-- Mapstruct should follow the lombok path(s) -->
                    <path>
                        <groupId>org.mapstruct</groupId>
                        <artifactId>mapstruct-processor</artifactId>
                        <version>${org.mapstruct.version}</version>
                    </path>
                </annotationProcessorPaths>
                <compilerArgs>
                    <compilerArg>
                        -Amapstruct.suppressGeneratorTimestamp=true
                    </compilerArg>
                    <compilerArg>
                        -Amapstruct.suppressGeneratorVersionInfoComment=true
                    </compilerArg>
                </compilerArgs>
            </configuration>
        </plugin>

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.0.1</version>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>3.2.0</version>
        </plugin>
    </plugins>
</pluginManagement>
</build>

    </project>
